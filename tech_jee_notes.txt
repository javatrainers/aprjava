internet - network of computers (global) billions
	wireless : satelites inter connected devices such a Phones/mobiles
	wireline : home internet ... copper/fiber cable
	
intranet - closed network , corporate, educational, organization ( 1000 or millions)
LAN - home network

ip - 
	IPv4 = IP version 4
	IPv6 = IP version 6 - 32 digit 
	
cell phone users - every cell phone has unique phone number

Every internet connected devices has unique ID.... IPAddress
	Internet Protocol Address

IP address = to identify a internet connected device
out of billions of devices.
(phone,tablet,pc,laptop, smart watch, smart thermostat, smart refrigeration, smart tv)
IPv4 = ipaddress version 4
x.x.x.x = 256 X 256 X 256  X 256 = 4 billion ip addresses
x= 0-255 = 256 possibilities
12.224.123.78
0.0.0.0
0.0.0.1
0.0.0.2
0.0.0.3
255.255.255.255 



8 billion people = 4 billion using internet
	laptop  , cellphone, smart watch, smart tv
	Total devices are connected to the internet =
	4 billion users X number of internet device(atleast 2 device) 
	
every device need to have unique ip address
ip address in total = 4 billion
total internet connect devices = 10 billion

Not enough unique ip address for each of device on internet
	
IPv6 = ipaddress version 6.. trillions and trillions of ip address possibility

32 digit long number
xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx
x=0-9 or A-F ( hexa decimal = 0-9 and first 6 alphabets)

4A9C:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx


WAN IP : ip assigned to device that are directly connected to internet
LAN IP : ip assigned to device that are connected to internet service device such as ROUTER

domain name = alias to ip address just like contact name vs phone number

port/socket 
dns  
dhcp
router - route traffic
load balancer 

n/w commands
	ipconfig - show my lan ip address
		display hosts ip address
	netstat -a - show all ports open
		network statistic - host ip/port >>>>> server ip/port
					
	ping - remote machine is reachable and response time (round trip time)
		
	telnet - website software is open on remote aws machine
	tracert - find delay in the network (trace route)






***********************

Website project
	1) How do you write program that can be hosted on internet... additional library/program to be included in project
		project depedancy - Spring web
	2) Project structure - java stored in src/java folder... web/html program in src/main/resource/webapps
	3) Web Server software - Apache Tomcat 
	4) (BUILD) Package your website s/w - single exe/setup file ( archived/compressed
		all your programs)
		Spring-boot : Type-Maven... packaging - WAR
		
		
		
Spring Boot 
	Project Eco System - Helps with all the above



jar - group of java programs ( Java ARchive)
	single setup/executable file that consists of java 
war - group of web pgrams (Web ARchive)
	single setup/executable file that consists of java/html/images/video

Chrome browser s/w
	chrome browser s/w : written with 100s or 1000s of programs
	install chrome browser : installation... where ALL programs that make
		up your software are PACKAGED in a single setup/exe file
		setup/install file : package/compressed/archive file that contains
			100s/1000s of your programs

setup Spring boot project in your laptop..
when u launch Spring boot project in your laptop...
	website accessible to you only : by entering localhost in your laptop browser
	
Deploying : 
	1) package your code in setup/exe file
	2) upload your exe file onto Cloud (AWS, Mic Azure, Google cloud)
	3) install  your exe file in Cloud (AWS, Mic Azure, Google cloud)
	4) launch your website from cloud
	
	free tier = trial account
	
	
Programming /devlopment : on your laptop
local website testing on your machine (local/developent setup = website is accessible to you)
	start website locally on spring tool suite s/w = right click on xxxApplicatino.java > run as > java application
	Use browser to test your website
	http://localhost
	validate your changes 
Build
	New changes on website program has to be re-packaged into
	new setup file
	pom.xml > right click > maven install
	generate new setup file
	Project location > target folder > xxxxx.war
production Deployment (production = website is accessible to the public)
	upload xxxx.war file onto AWS machine (Winscp or Terminal)
	remote login into aws machine (putty)
		start your website = java command on setup/exe file  xxxx.war
		WEBSITE IS LIVE FOR EVERYONE ( with changes that u did to the website)

website is down for maintainance
please try again later


Local setup = your laptop
pre-production setup
production setup = aws machine leasing/renting from cloud

Athlete prepare
	baseball athelete
		net practice = small setup for practice
		game practce = bigger ground ... practice among your team member
		competiion = same sized ground as game practice... 


Build
deployment
production release
dev testing


sudo nohup java -jar asdsad.war &

sudo  - super user 
	login ec2-user .. not  a admin user... sudo admin privileges
nohup - nohangup 
	java program will be running in background
java -jar ... java command substitute ( click of run button on sprint tool suite)
& - console output is basicually redirected to a flaat file
	nohup.out
	
***************** XML *********************


xml - data format
extensible markup language - meta data (information about data)
UTF - 8 = write data in ascii character
UTF - 16
dtd = document type definition
xsd = xml schema design
	type of each eleemnt = city element stores text value, zip element store numberedd value
	validation = customer element can have more than 1 address element, building name is optional
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MyDocs SYSTEM "filename.dtd">
<customer>
	<address>
		<building>
			<buldingName  buildingNumber="1234"  >asd</buldingName>
			<streetName>ads</streetName>
		</building>
		<city>asd qeerw</city>
		<state>asd qeerw</state>
		<zip>1223</zip>
		<phone>
			<areaCode>123</areaCode>
			<number>1231111</number>
		</phone>
	</address>
	<address>
		<building>asdadq</building>
		<city>fdgfg</city>
		<state>ertret</state>
		<zip>1231</zip>
		<phone>222222</phone>
	</address>
</customer>
element : nested (element within an element)
	represented with anchor tags. every opened element has to be closed ( STRICTLY TYPED LANGUAGE )
	<>=opening tag/element
	</>=closing tag
	root element = first element in xml file.. customer.. there can be only 1 root element
	parent element = address is parent of building
	child element = building is child of parent
	sibling element = building and city. city and state etc
	elements = represent complex value.. information that can be further divided..
	value = non-element text information.. between opening and closing tag
attributes : information might be atomic... indivisible....
	key-value pair.. and are associated with an element
	building number = 12334
	
	
**************** HTML *****************

web content resource - webpage, image, video
Hyper-Text : links to other web content resoures text
HTML : Hyper-Text Markup language
HTTP : Hyper-text Transfer protocol (Fedex,USPS)
Browser : Http Client... Understands Html , converts
	HTML program into Graphical Display
	
	
	HTML : TEXT and INPUT section of webpage
CSS :Cascading Style Sheet 
	dimension, color,size, position, 
	animation
JavaScript : validation, animation
	

Event listeners : when customer interacts..
	Customer interact with website... Mouse or Keyboard
	
	
	
Frontend
	html : webpage input elements , images, video
	css : styling of webpage includes dimensions, colors, alignment, animation
	javascript 
Backend
	java
	
	
java : variable and methods and control flows ( if , while, for )
	variable : simple/primitive, and object/complex
		String name; int age; String city; float height;
		public class student{
			String school="java school";
			int grade=12;
			String name="john";
			public void sayHello(){
			}
		}
		Student s=new Student();
		s.grade
		s.sayHello();
		
javascript : variable and functions
		var name="john"; 
		name=20;
		
		var age=10; 
		var height=12.1;
		var active=true;
		var s={
			school:"javascript school",
			grade:2,
			name:"john"
		};
		console.log( s.grade );

Java method :

int result=add( 10 , 20);
public int add(int a, int b ){
	int sum=a+b;
	return sum;
}

javascript function :
var result=add(10,20);
function add( a , b ){
	var sum=a+b;
	return sum;
}



Event listeners : track customer activity,
	Mouse : movement, click
	
	Keyboard : typing

	HTML : focus, blur, load, unload
	
HTML / CSS / Javascipt / Java	
Html element :
	id = javascript uses this attribute to access customer input
	class = css uses this provide styling , animation, color, dimensions
	name = java (server side program) uses this attribute to access customer input
	
	
TRANSFER CONTROL FROM HTML TO JS : EVENT LISTENERES
DATA GETS ACCESSED FROM JS TO HTML : ID ATTRIBUTE



*********** JQuery ****************

javascript framework

1) simple coding
2) animation
3) decoupled architecutre

<div id="one">
	<div id="two">
	</div>
</div>

<div id="three">hi john</div>

$("#two").parent

html content inside an element = 
	$("#one").html()  >>>> <div id="two"></div>
text content in an element
	$("#three").text()  >>>>>> hi john
customer typed input from the webpage
	$("#userid").val()

above methods are overloaded... 
$("#userid").val()		= READ what customer typed in userid text box
$("#userid").val("please type userid") = WRITE text in userid text box



name = java
id	= javascript
class = CSS


browser/html program
	on click of a button
	
	website name = ? http://localhost/
	action attribute value = ? login 
	what are the name attributes in html form = ? userid , password
	what are the input in each of html elements = ? mike , mike123
	
	constructed upon a click of a button
	http://localhost/login?userid=mike&password=mike123
	
	http://localhost : address of website server machine (domain name)
	/login		: connected to a SPECIFIC java program on that website server machine (there can be more than 1 java program)
	?			: query string 
	userid=mike&password=mike123 :
		& acts like infor separator
		key=value pair allows us to identify information
	
	userid=jane&password=jane123
	qweqwe & dfgdfgdg & qeqweqwe
	
	


HTTP
	transportation service - web content
	Return service - info travel both ways (bi-directional)
		Request : info travels from customer to server machine
		Response : info travels from server machine to customer
		
	courier service :
		content/package : confidential paper, electronic, furniture
		label : 
			from : john doe, ny
			to : jane doe, 123 street, nj, usa, 12345
			content-type : confidential paper / bio-degrable / glass handle with care
			weight : 1 pounds
			
	Http :
		Body : digital internet data
			text , images , audio, video, binary file
		Header : 
			to : www.google.com
			from : 123.1.2.2
			content type : text/image/audio
			content size : 5 KB
	
	tranportation method
		get - infor transferred in http url
			data is transferred from the header NOT SAFE
			size of data is limited
			data type is only text in rquest
			get can be cached ( PRO )
		post - infor transferred in http body 
			data is transferred SECURELY from within the body/package
			size of data is unlimited
			all kind of data type
			post cannot be cached
	
	Http status code
		2XX = Successful completion ( 200 )
		3XX = successfull but with redirection ( 302, 301 )
		4XX = Failure... problem is on customer side
		5XX = Failure... problem is on server side
		
		
1) configure servletcomponentscan in xxxAppliation.java
2) create a java program
3) @webservlet("login") = configure java program to a URL
4) extend java program with HTTPServlet
5) prepare doGet and doPost method in java program

		
calling method :
	initialize java program = LoginServlet ls=new LoginServlet();
	ls.doPost(
		
Apache Tomcat : map URL to server program, initialize server program, destry server program
	webserver software
	servlet container

glassfish, jboss, weblogic, websphere, IIS


Servlet
	constructor
	init() = setup during website startup
	service() = NEVER NEVER override
	doGet() =  override implementation
	doPost() = override implementation 
	destroy() = cleanup during website shutdown


Server program Response
	Webpage
		redirect : when servlet program has to transfer control outside our website project
		forward : when servlet program has to transfer control within our website project
	
	text content
		res.getWriter().write
	
	binary content
		res.getOutputStream().write
	
	
Http : stateles protocol
	http cannot remember state of conversation
	
	
	request.getHeader("Content-Length");
	
	
	

********************** 

Static webpage : wikipedia
	HTML program


Dynamic webpage : gmail, facebook
	JSP - Java Server Pages
	JSP = HTML + java
	
	variable- vary - changes
	
	
Servlet can contain - html and java
	primary focus is Java
jsp can contain - html and java
	primary focus is HTML
	
	

Expressions
variable... expression
<%=    %>

scriptlet : multi line java code.
variable declared, call method, coontrol flow
<%	%>



Server-side Program
	Servlet
	Rest webservice
	Soap webservice
	Spring MVC
	Strut framework
	
	
	area of square = side
	http://localhost/areaOfSquare/5
	
	area of rectange = length breadth
	http://localhost/areaOfRectangle/5/4
	http://localhost/areaOfRectangle?length=5&breadth=4
********************web service *****************

Rest webservice with JSON input or output

PUBLISHING Services
	Rest webservice : Http
		Input 
			Get : input is part of URL
				path based input : http://localhost/areaOfSquare/5
				query based input : http://localhost/add?number1=25&number2=45
			
			Post : complex input... input is part of BODY ( XML or JSON )
			
				receive complex JSON input
				1) create java program compliant with json string
					input={
							"name":"java",
							"age":10,
							"active":true
						}
						
					JSON MAPPER  : transfer data from JSON to Java variables
					
					public class JSONCompliantInput{
						String name;
						int age;
						boolean active;
						// get set methods
						// get = read values
						// set = write values.. JSON mapper will set "java" value onto java variable "name"
					}
				2) webservice method should include json compliant java program
					as the parameter with annotation @RequestBody
				3)    Webservice method should be mapped to a URL
						@RequestMapping(value = "/jsonReqMul"
					Webservice input should be marked as post service
						method = RequestMethod.POST
					Webservice input content type
						consumes = MediaType.APPLICATION_JSON_VALUE
					
				
		Output		
			Rest webservice that can return complex output ( JSON / XML )
			Take 2 input of type numbers
				http://localhost/complexOutput/20/10
			return addition, sub, mul,div to the customer					
				{
					"add":30,
					"sub":10,
					"mul":200,
					"div":2
				}

			1) create json compliant java program
				public class ComplexJsonOutput{
					public int add;
					public int sub;
					public int mul;
					public int div;
					// get set methods
				}
			2) create java webservice method	with return type as above json compliant java program
				public 	ComplexJsonOutput  complexOutput(int a, int b){
					ComplexJsonOutput  co=new ComplexJsonOutput  ();
					co.add=a+b;
					co.sub=a-b;
					co.mul=a*b;
					co.div=a/b;
					return co;
				}
			3) method from step#2 has to be published as a webservice
			
			
			
			
			
			






















	Soap webservice : deals with xml only.
		Post : 
		
CONSUMING services
	*********Get : input is part of URL*********
			path based input : http://localhost/rectangle/10/20 (input is not tagged)
			query based input : http://localhostcalSI?p=1000&t=30&r=5
		What is the webservice url
		what is the input required in url
			http://localhost/rectangle/10/20
		what is the output from webservice
			integer
			

		RestTemplate rectangle=new RestTemplate(); // Rest stub program
		int res=rectangle.getForObject("http://localhost/rectangle/10/20", Integer.class);
		System.out.println("area of rectangle is :"+res);

					
		RestTemplate calSI=new RestTemplate(); // Rest stub program
		int res=calSI.getForObject("http://localhost/calSI?p=1000&t=30&r=5", Integer.class);
		System.out.println("simple interest is :"+res);

	*********Post : complex input... input is part of BODY*********
		receive complex JSON input			

		What is the webservice url
			http://localhost/calSimpleInterest
		what is the input required in url
			{
				"principal":100000,
				"time":30,
				"rate":5
			}
		what is the output from webservice
			integer
			
		Create java program that is JSON input compliant
		public class WSClientSimplInterest{
			int principal=100000;
			int time=30;
			int rate=5;
			// get set methods
		}
			RestTemplate calPostSI=new RestTemplate(); // Rest stub program
			WSClientSimplInterest myInput=new WSClientSimplInterest();
			int res=calPostSI.postForObject("http://localhost/calSimpleInterest",  myInput , Integer.class);
			System.out.println("simple interest is :"+res);
		
			
		int res=calPostSI.postForObject("http://localhost/calSimpleInterest",  myInput , Integer.class);
		int res=calSI.getForObject("http://localhost/calSI?p=1000&t=30&r=5", Integer.class);
						

		*********Complex JSON output*********
		
		What is the webservice url
		what is the input required in url
			http://localhost/multiOutput/5
		what is the output from webservice
			{
			    "square": 25,
			    "cube": 125,
			    "areaOfCircle": 78.53981633974483
			}
			
			
		public class ComplexOutputJson{
			int square;
			int cube;
			double areaOfCircle;
			//get set methods
		}
		RestTemplate multiOp=new RestTemplate(); // Rest stub program
		ComplexOutputJson res=multiOp.getForObject("http://localhost/multiOutput/5", ComplexOutputJson.class);
		System.out.println("mutli output is :"+res);
	
			
			
			
wsdl file = documentation / description of soap webservice

Swagger = documentation tool for Rest webservice

	

WSDL : webservice Description language
wisdal
	is an xml file
	this file describes about your webservice 
	( IN PLATFORM NEUTRAL DESCRIPTION LANGUAGE)
		What is the webservice URL
		what are the features/operations in the webservice
		what is the input and output from each operation


How to create soap webservice
	top-down approach - Expert programmer (Spring webservice)
		1) Manually create wsdl file
		2) generate java program from wsdl file
	bottom-up approach - Apache CXF framework
		annotation based soap webservice development
		1) create java program 
		2) link the program to a http url
			endpoint configuration
		3) wsdl file is automatically created from java program


wsdl file can contain XSD link

XSD = Xml Schema Definiation
	Purpose of this file is validation
	VALIDATE if customer sent mandatory inputs or not
		


DOCUMENT LITERAL	: 
	DOES NOT WORK IF 2 METHODS HAVE SAME INPUT
<types> 
	<schema> 
		<element name="xElement" type="xsd:int"/> 
		<element name="yElement" type="xsd:int"/> 
	</schema> 
</types> 
DOCUMENT LITERAL WRAPPED : INCLUDES OPERATION NAMES
	DOES NOT WORK FOR OVERLOADED METHODS
	ADD 2,3,4
<types> 
	<schema> 
		<element name="add"> 
			<complexType> 
				<sequence> 
				<element name="x" type="xsd:int"/> 
				<element name="y" type="xsd:int"/> 
				</sequence> 
			</complexType> 
		</element> 
		<element name="addResponse"> 
		<complexType/> 
		</element> 
	</schema> 
</types





var name="john";
var age=10;

Javascript object
	var person={
		name:"jane",
		age:15,
		city:"ny",
		zip:12345
	};
	
JSON - Java Script Object Notation = String version of Javascript object
	var person={
		"name":"jane",
		"age":15,
		"city":"ny",
		"zip":12345,
		"active":true
	};
	
JSON - data format represntation
	simple input
http://localhost/login?userid=john&password=john123
	complex input : 
		how to transport complex input : Http post 
		data format : XML /JSON
	<FBAccount>	
		<name>
			<firstName>john</firstName>
			<lastName>doe</lastName>
		</name>
		<Screnname>javaJohn</Screnname>
		<dob>1990</dob>
		<school>ny university</school>
		<FriendsList>
			<friends>jane</friends>
			<friends>tony</friends>
		</FriendsList>
		<posts>
			<post>election news</post>
			<post>cdc news</post>
		</posts>
	</FBAccount>		
	
		
fb Account: 
	name
	screen name
	last name
	dob
	school
	friends list
	post
	message
	
	
Rest webservice Data conversion ( Spring Rest Webservice Framework  = @RestController)
	JSON to JAVA 	& 	JAVA to JSON = JACKSON library


Soap webservice Data conversion ( Apache CXF = @WebService)
	XML to JAVA 	& 	JAVA to XML = JAXB library (JAva Xml Binding)





	
	
	